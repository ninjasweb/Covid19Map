{"ast":null,"code":"import _classCallCheck from\"c:\\\\AR\\\\Proyectos\\\\Covid Colombia\\\\covidmap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"c:\\\\AR\\\\Proyectos\\\\Covid Colombia\\\\covidmap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _createSuper from\"c:\\\\AR\\\\Proyectos\\\\Covid Colombia\\\\covidmap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import _inherits from\"c:\\\\AR\\\\Proyectos\\\\Covid Colombia\\\\covidmap\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component,Fragment}from\"react\";import ReactDOM from\"react-dom\";import\"./assets/style.css\";import quizService from\"./quizService\";import QuestionBox from\"./components/QuestionBox\";import Result from\"./components/Result\";import Inicio from\"./components/Inicio\";import Footer from\"./components/Footer\";var CovidTest=/*#__PURE__*/function(_Component){_inherits(CovidTest,_Component);var _super=_createSuper(CovidTest);function CovidTest(){var _this;_classCallCheck(this,CovidTest);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={questionBank:[],score:0,responses:0,inicio:false,lat:null,lon:null,latlon:null,address:null};_this.showshow=function(){_this.setState({inicio:true});if(navigator.geolocation){navigator.geolocation.getCurrentPosition(_this.getCoordinates);}else{alert(\"Tu navegador no soporta la Geolocalización\");}console.log(\"Obteniendo Coordenadas...\");};_this.showMap=function(){var latlon=_this.state.lat+\",\"+_this.state.lon;var img_url=\"https://maps.googleapis.com/maps/api/staticmap?center=\"+latlon+\"&zoom=17&size=400x300&sensor=false&key=AIzaSyAoqNSoiv1sNNZ_FnlPLNMz1jYaPCYefkU\";return/*#__PURE__*/React.createElement(\"img\",{src:img_url,alt:\"Mapa\"});};_this.getCoordinates=function(position){console.log(position.coords.longitude);console.log(position.coords.latitude);_this.setState({lat:position.coords.latitude,lon:position.coords.longitude});};_this.getQuestions=function(inicio){quizService().then(function(question){_this.setState({questionBank:question});});};_this.computeAnswer=function(answer,puntaje){if(answer===\"SI\"){_this.setState({score:_this.state.score+puntaje});}_this.setState({responses:_this.state.responses<8?_this.state.responses+1:8});};_this.playAgain=function(){_this.getQuestions();_this.setState({score:0,responses:0});};_this.publicarSintomas=function(valoracion,ubicacion){valoracion=_this.state.score;ubicacion=_this.state.lat+\",\"+_this.state.lon;alert(valoracion+\",\"+ubicacion);};return _this;}_createClass(CovidTest,[{key:\"componentDidMount\",//Ciclo de vida\nvalue:function componentDidMount(){this.getQuestions();}// Agregar debajo de content <div className=\"title\">AUTO-TEST COVID-19 (SARS-COV-2)</div>\n},{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"container\"},this.state.inicio===false?/*#__PURE__*/React.createElement(Inicio,{inicio:this.state.inicio,showshow:this.showshow,getCoordinates:this.getCoordinates}):null,this.state.inicio===true&&this.state.questionBank.length>0&&this.state.responses<8&&this.state.questionBank.map(function(_ref){var question=_ref.question,answers=_ref.answers,puntaje=_ref.puntaje,questionId=_ref.questionId;return/*#__PURE__*/React.createElement(QuestionBox,{question:question,options:answers,key:questionId,selected:function selected(answer){return _this2.computeAnswer(answer,puntaje);}});}),this.state.responses===8?/*#__PURE__*/React.createElement(Result,{score:this.state.score,playAgain:this.playAgain,publicarSintomas:this.publicarSintomas,lat:this.state.lat,lon:this.state.lon,latlon:this.state.latlon,showMap:this.showMap}):null)),/*#__PURE__*/React.createElement(Footer,null));}}]);return CovidTest;}(Component);ReactDOM.render(/*#__PURE__*/React.createElement(CovidTest,null),document.getElementById(\"root\"));","map":{"version":3,"sources":["c:/AR/Proyectos/Covid Colombia/covidmap/src/index.js"],"names":["React","Component","Fragment","ReactDOM","quizService","QuestionBox","Result","Inicio","Footer","CovidTest","state","questionBank","score","responses","inicio","lat","lon","latlon","address","showshow","setState","navigator","geolocation","getCurrentPosition","getCoordinates","alert","console","log","showMap","img_url","position","coords","longitude","latitude","getQuestions","then","question","computeAnswer","answer","puntaje","playAgain","publicarSintomas","valoracion","ubicacion","length","map","answers","questionId","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, {Component, Fragment} from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./assets/style.css\";\r\nimport quizService from \"./quizService\";\r\nimport QuestionBox from \"./components/QuestionBox\";\r\nimport Result from \"./components/Result\";\r\nimport Inicio from \"./components/Inicio\";\r\nimport Footer from \"./components/Footer\"\r\n\r\n\r\n\r\nclass CovidTest extends Component {\r\n\r\n\r\n\tstate = {\r\n\t\tquestionBank: [],\r\n\t\tscore: 0,\r\n\t\tresponses: 0,\r\n\t\tinicio: false,\r\n\t\tlat: null,\r\n\t\tlon: null,\r\n\t\tlatlon: null,\r\n\t\taddress: null\r\n\t}\r\n\t;\r\n\r\n\r\n\r\n\t\r\n\t//Iniciar el Test \r\n\tshowshow = () => {\r\n    \tthis.setState(\r\n\t\t\t{inicio: true\r\n\t\t\t}\r\n\t\t);\r\n\t\tif(navigator.geolocation){\r\n\t\t\tnavigator.geolocation.getCurrentPosition(this.getCoordinates);\r\n\t\t}\r\n\t\telse {\r\n\t\t\talert(\"Tu navegador no soporta la Geolocalización\");\r\n\t\t}\r\n\t\tconsole.log(\"Obteniendo Coordenadas...\");\r\n\r\n\t}\r\n\r\n\t//Mostrar el Mapa\r\n\tshowMap = () => {\r\n\t\tvar latlon = this.state.lat + \",\" + this.state.lon;\r\n\t\tvar img_url = \"https://maps.googleapis.com/maps/api/staticmap?center=\"+latlon+\"&zoom=17&size=400x300&sensor=false&key=AIzaSyAoqNSoiv1sNNZ_FnlPLNMz1jYaPCYefkU\";\r\n\t\treturn(\r\n\t\t\t<img src={img_url} alt=\"Mapa\"/>\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\t\t\r\n\t//Obtener Coordenadas\r\n\tgetCoordinates = (position) => {\r\n\t\tconsole.log(position.coords.longitude);\r\n\t\tconsole.log(position.coords.latitude);\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tlat: position.coords.latitude,\r\n\t\t\t\tlon: position.coords.longitude\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\r\n\r\n\t//Obtener las preguntas\r\n\tgetQuestions = (inicio) => {\r\n\t\t\tquizService().then(\r\n\t\t\t\tquestion => {\r\n\t\t\t\t\tthis.setState(\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tquestionBank: question\r\n\t\t\t\t\t\t});\r\n\t\t\t\t});\r\n\r\n\t}\r\n\r\n\t//Computar la respuesta\r\n\tcomputeAnswer = (answer, puntaje) => {\r\n\t\tif (answer === \"SI\") {\r\n\t\t\tthis.setState(\r\n\t\t\t\t{score: this.state.score + puntaje}\r\n\t\t\t);\r\n\r\n\t\t}\r\n\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\tresponses: this.state.responses < 8 ? this.state.responses + 1 : 8\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t}\r\n\r\n\t//Jugar de Nuevo\r\n\tplayAgain = () => {\r\n\t\tthis.getQuestions();\r\n\t\tthis.setState({\r\n\t\t\tscore: 0,\r\n\t\t\tresponses: 0\r\n\t\t});\r\n\t}\r\n\r\n\t//Publicar los síntomas\r\n\tpublicarSintomas = (valoracion, ubicacion) => {\r\n\t\t\tvaloracion = this.state.score;\r\n\t\t\tubicacion = this.state.lat + \",\" + this.state.lon;\r\n\t\t\talert(valoracion + \",\" + ubicacion);\r\n\t}\r\n\r\n\t\r\n\r\n\t//Ciclo de vida\r\n\tcomponentDidMount(){\r\n\t\tthis.getQuestions();\r\n\t}\r\n\t// Agregar debajo de content <div className=\"title\">AUTO-TEST COVID-19 (SARS-COV-2)</div>\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t<div className=\"content\">\r\n\t\t\t\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{this.state.inicio === false ? (<Inicio\t\r\n\t\t\t\tinicio={this.state.inicio} showshow={this.showshow} getCoordinates={this.getCoordinates}\t/>): null }\r\n\t\t\t\t{this.state.inicio === true && this.state.questionBank.length > 0 &&\r\n\t\t\t\tthis.state.responses < 8 && \r\n\t\t\t\tthis.state.questionBank.map(({question, answers, puntaje, questionId}) => (\r\n\t\t\t\t\t<QuestionBox \r\n\t\t\t\t\tquestion={question} \r\n\t\t\t\t\toptions={answers} \r\n\t\t\t\t\tkey={questionId}\r\n\t\t\t\t\tselected={answer => this.computeAnswer(answer, puntaje)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t))}\r\n\r\n\t\t\t\t{this.state.responses === 8 ? (<Result score={this.state.score} playAgain={this.playAgain} publicarSintomas={this.publicarSintomas} lat={this.state.lat} lon={this.state.lon} latlon={this.state.latlon} showMap={this.showMap} />) : null}\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t\r\n\t\t\t\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<Footer/>\r\n\r\n\r\n\r\n\t\t\t</Fragment>\r\n\t\t\t);\r\n\t}\r\n}\r\n\r\nReactDOM.render( <CovidTest />, document.getElementById(\"root\") );\r\n\r\n"]},"metadata":{},"sourceType":"module"}